# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  docker: circleci/docker@0.5.17
jobs:
  test:
    docker:
      - image: circleci/python:3.8.3
      - image: circleci/postgres:12.1-alpine-ram

    working_directory: ~/repo
    environment:
      DATABASE_URL: postgresql://postgres@localhost/circle_test
  
    steps:
      - run:
          name: install psql
          command: |
            sudo apt-get install postgresql-client

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      
      - run:
          name: Create PostgreSQL extensions
          command: |
            psql -h localhost -U postgres circle_test -c "CREATE EXTENSION IF NOT EXISTS pgcrypto"

      - checkout

      - restore_cache:
          keys:
            - v3-dependencies-{{ '{{' }} checksum "Pipfile.lock" {{ '}}' }}
            # fallback to using the latest cache if no exact match is found
            - v3-dependencies-

      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save_cache:
          key: v3-dependencies-{{ '{{' }} checksum "Pipfile.lock" {{ '}}' }}
          paths:
            - ~/.local
            - ~/.cache

      - run:
          name: run tests
          command: |
            pipenv run python -m pytest --junitxml=test-reports/junit.xml --cov={{cookiecutter.project_slug}} --cov-report html -svvv ./tests

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: htmlcov
          destination: htmlcov

  publish:
    executor: docker/docker
    environment:
      DOCKER_CONFIG: /home/circleci/.docker/config.json
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: charts
      - run:
          name: Login docker
          command: |
            echo $DOCKER_LOGIN > /tmp/.token.json
            docker login -u _json_key --password-stdin https://{{cookiecutter.docker_registry}} < /tmp/.token.json
      - docker/build:
          registry: {{cookiecutter.docker_registry}}
          image: {{cookiecutter.docker_image}}
          dockerfile: Dockerfile
          tag: "${CIRCLE_TAG:-$CIRCLE_SHA1}"
      - docker/push:
          digest-path: /tmp/digest.txt
          registry: {{cookiecutter.docker_registry}}
          image: {{cookiecutter.docker_image}}
          tag: "${CIRCLE_TAG:-$CIRCLE_SHA1}"
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
            echo "Tag is: ${CIRCLE_TAG:-$CIRCLE_SHA1}"

workflows:
  build-deploy:
    jobs:
      - test:
          filters:
            # needed for deploy build
            # ref: https://discuss.circleci.com/t/builds-for-tags-not-triggering/17681/7
            tags:
              only: /^.*/
      - publish:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^.*/
